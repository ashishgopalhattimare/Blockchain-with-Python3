import json
from web3 import Web3


def writeToFile(address):
	filex = open('address.txt', 'w')
	filex.write(address)
	
	filex.close()
	return

def readFromFile(path):
	filex = open(path, 'r')
	
	data = filex.read().strip()
	filex.close()
	
	return data

if __name__ == '__main__':
	
	print('URL of the Server : ', end = '')
	url = input().strip().lower()
	
	#Connect to the web3 ethereum
	web3 = Web3(Web3.HTTPProvider(url))
	
	print()
	if web3.isConnected() == True :
		
		print("|| SMART CONTRACT DEPLOY || ", end = '\n\n')
		
		# smart Contract ABI
		abi = json.loads(readFromFile('abi.txt'))
		
		# ByteCode of the smart contract
		bytecode = '6060604052341561000f57600080fd5b61061b8061001e6000396000f300606060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063077510701461006757806323300ca4146100f5578063650d993b146101835780636c2bc72d14610211575b600080fd5b341561007257600080fd5b61007a6102f4565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156100ba57808201518184015260208101905061009f565b50505050905090810190601f1680156100e75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561010057600080fd5b61010861039c565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561014857808201518184015260208101905061012d565b50505050905090810190601f1680156101755780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561018e57600080fd5b610196610444565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101d65780820151818401526020810190506101bb565b50505050905090810190601f1680156102035780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561021c57600080fd5b6102f2600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919050506104ec565b005b6102fc610536565b60028054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103925780601f1061036757610100808354040283529160200191610392565b820191906000526020600020905b81548152906001019060200180831161037557829003601f168201915b5050505050905090565b6103a4610536565b60008054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561043a5780601f1061040f5761010080835404028352916020019161043a565b820191906000526020600020905b81548152906001019060200180831161041d57829003601f168201915b5050505050905090565b61044c610536565b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104e25780601f106104b7576101008083540402835291602001916104e2565b820191906000526020600020905b8154815290600101906020018083116104c557829003601f168201915b5050505050905090565b826000908051906020019061050292919061054a565b50816001908051906020019061051992919061054a565b50806002908051906020019061053092919061054a565b50505050565b602060405190810160405280600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061058b57805160ff19168380011785556105b9565b828001600101855582156105b9579182015b828111156105b857825182559160200191906001019061059d565b5b5090506105c691906105ca565b5090565b6105ec91905b808211156105e85760008160009055506001016105d0565b5090565b905600a165627a7a72305820e5711ec4b5bd494a7f585088f17f63b24e4441dee797d4272791cdde06b49b1e0029'

		print("Address of the Deployer : ", end='')
 
		# Set the adress of the deployer
		web3.eth.defaultAccount = input().strip()

		# Smart Contract Deply in python
		LandFraud = web3.eth.contract(abi = abi, bytecode = bytecode)

		tx_hash = LandFraud.constructor().transact()
		tx_receipt = web3.eth.waitForTransactionReceipt(tx_hash)
		
		contractAddress = tx_receipt.contractAddress
		
		writeToFile(contractAddress)

		print("Smart Contract Deployed successfully")
	
	else :
		print("Error : Not able to Connect")


